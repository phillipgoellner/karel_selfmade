plugins {
    id 'application'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

version = gitHash()

private String gitHash() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': gitHash()
    }
}

tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    afterSuite { desc, result ->
        if (!desc.parent) {
            def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            def startItem = '|  ', endItem = '  |'
            def repeatLength = startItem.length() + output.length() + endItem.length()
            println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
        }
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/phillipgoellner/karel_selfmade")
            credentials {
                username = project.findProperty("gpr.user")
                password = project.findProperty("gpr.key")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}